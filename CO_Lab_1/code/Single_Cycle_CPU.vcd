$date
	Thu Jul 26 14:00:50 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! CLK $end
$var reg 1 " RST $end
$var integer 32 # count [31:0] $end
$var integer 32 $ end_count [31:0] $end
$var integer 32 % handle [31:0] $end
$scope module cpu $end
$var wire 4 & ALUCtrl [3:0] $end
$var wire 1 ' ALUSrc $end
$var wire 32 ( ALUSrcMux [31:0] $end
$var wire 3 ) ALU_op [2:0] $end
$var wire 32 * ALU_result [31:0] $end
$var wire 1 + RegDst $end
$var wire 1 , RegWrite $end
$var wire 1 - clk_i $end
$var wire 32 . instruction [31:0] $end
$var wire 32 / program_new [31:0] $end
$var wire 32 0 program_next [31:0] $end
$var wire 32 1 program_now [31:0] $end
$var wire 32 2 program_pre [31:0] $end
$var wire 32 3 readData1 [31:0] $end
$var wire 32 4 readData2 [31:0] $end
$var wire 1 5 rst_i $end
$var wire 32 6 signExtend [31:0] $end
$var wire 32 7 signExtend_shifted [31:0] $end
$var wire 5 8 writeRegMux [4:0] $end
$var wire 1 9 zero $end
$scope module PC $end
$var wire 1 - clk_i $end
$var wire 32 : pc_in_i [31:0] $end
$var wire 1 5 rst_i $end
$var reg 32 ; pc_out_o [31:0] $end
$upscope $end
$scope module Adder1 $end
$var wire 32 < src1_i [31:0] $end
$var wire 32 = src2_i [31:0] $end
$var wire 32 > sum_o [31:0] $end
$upscope $end
$scope module IM $end
$var wire 32 ? pc_addr_i [31:0] $end
$var integer 32 @ i [31:0] $end
$var reg 32 A instr_o [31:0] $end
$upscope $end
$scope module Mux_Write_Reg $end
$var wire 5 B data0_i [4:0] $end
$var wire 5 C data1_i [4:0] $end
$var wire 5 D data_o [4:0] $end
$var wire 1 + select_i $end
$upscope $end
$scope module RF $end
$var wire 5 E RDaddr_i [4:0] $end
$var wire 32 F RDdata_i [31:0] $end
$var wire 5 G RSaddr_i [4:0] $end
$var wire 32 H RSdata_o [31:0] $end
$var wire 5 I RTaddr_i [4:0] $end
$var wire 32 J RTdata_o [31:0] $end
$var wire 1 , RegWrite_i $end
$var wire 1 - clk_i $end
$var wire 1 5 rst_i $end
$upscope $end
$scope module Decoder $end
$var wire 1 ' ALUSrc_o $end
$var wire 3 K ALU_op_o [2:0] $end
$var wire 1 + RegDst_o $end
$var wire 1 , RegWrite_o $end
$var wire 6 L instr_op_i [5:0] $end
$upscope $end
$scope module AC $end
$var wire 4 M ALUCtrl_o [3:0] $end
$var wire 3 N ALUOp_i [2:0] $end
$var wire 6 O funct_i [5:0] $end
$upscope $end
$scope module SE $end
$var wire 16 P data_i [15:0] $end
$var reg 32 Q data_o [31:0] $end
$upscope $end
$scope module Mux_ALUSrc $end
$var wire 32 R data0_i [31:0] $end
$var wire 32 S data1_i [31:0] $end
$var wire 32 T data_o [31:0] $end
$var wire 1 ' select_i $end
$upscope $end
$scope module ALU $end
$var wire 4 U ctrl_i [3:0] $end
$var wire 32 V result_o [31:0] $end
$var wire 5 W shamt_i [4:0] $end
$var wire 32 X src1_i [31:0] $end
$var wire 32 Y src2_i [31:0] $end
$var wire 1 9 zero_o $end
$upscope $end
$scope module Adder2 $end
$var wire 32 Z src1_i [31:0] $end
$var wire 32 [ src2_i [31:0] $end
$var wire 32 \ sum_o [31:0] $end
$upscope $end
$scope module Shifter $end
$var wire 32 ] data_i [31:0] $end
$var wire 32 ^ data_o [31:0] $end
$upscope $end
$scope module Mux_PC_Source $end
$var wire 32 _ data0_i [31:0] $end
$var wire 32 ` data1_i [31:0] $end
$var wire 32 a data_o [31:0] $end
$var wire 1 9 select_i $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx a
bx `
bx _
bx00 ^
bx ]
bx \
bx00 [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
b100000 @
bx ?
bx >
b100 =
bx <
bx ;
bx :
x9
bx 8
bx00 7
bx 6
05
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
0-
x,
x+
bx *
bx )
bx (
x'
bx &
b10 %
b11001 $
b0 #
0"
0!
$end
#5
b11 *
b11 F
b11 V
09
b100 &
b100 M
b100 U
b100 2
b100 :
b100 a
1'
b11 (
b11 T
b11 Y
b10000 /
b10000 \
b10000 `
b1100 7
b1100 [
b1100 ^
1,
b11 Q
b11 6
b11 S
b11 ]
b110 )
b110 K
b110 N
0+
b1010 8
b1010 D
b1010 E
b0 W
b11 P
b11 O
b1101 L
b1010 I
b0 4
b0 J
b0 R
b0 G
b0 3
b0 H
b0 X
b0 C
b1010 B
b110100000010100000000000000011 A
b110100000010100000000000000011 .
b0 ;
b100 0
b100 >
b100 Z
b100 _
b0 1
b0 <
b0 ?
b1 #
1!
1-
#10
b11 4
b11 J
b11 R
0!
0-
1"
15
#15
b1010 &
b1010 M
b1010 U
b11111111111101100000000000000000 *
b11111111111101100000000000000000 F
b11111111111101100000000000000000 V
b101 )
b101 K
b101 N
b11111111111111111111111111110110 (
b11111111111111111111111111110110 T
b11111111111111111111111111110110 Y
b11111111111111111111111111011000 7
b11111111111111111111111111011000 [
b11111111111111111111111111011000 ^
b11111111111111111111111111110110 Q
b11111111111111111111111111110110 6
b11111111111111111111111111110110 S
b11111111111111111111111111110110 ]
b1011 8
b1011 D
b1011 E
b11111 W
b1111111111110110 P
b110110 O
b1111 L
b1011 I
b0 4
b0 J
b0 R
b11111 C
b1011 B
b1000 2
b1000 :
b1000 a
b111100000010111111111111110110 A
b111100000010111111111111110110 .
b100 ;
b11111111111111111111111111100000 /
b11111111111111111111111111100000 \
b11111111111111111111111111100000 `
b1000 0
b1000 >
b1000 Z
b1000 _
b100 1
b100 <
b100 ?
b10 #
1!
1-
#20
0!
0-
#25
b11111111111111111111011000000000 *
b11111111111111111111011000000000 F
b11111111111111111111011000000000 V
b110 &
b110 M
b110 U
0'
b11111111111101100000000000000000 (
b11111111111101100000000000000000 T
b11111111111101100000000000000000 Y
b10110100000001100 7
b10110100000001100 [
b10110100000001100 ^
b101101000000011 Q
b101101000000011 6
b101101000000011 S
b101101000000011 ]
b0 )
b0 K
b0 N
1+
b1000 W
b101101000000011 P
b11 O
b0 L
b1011 C
b1100 2
b1100 :
b1100 a
b10110101101000000011 A
b10110101101000000011 .
b11111111111101100000000000000000 4
b11111111111101100000000000000000 J
b11111111111101100000000000000000 R
b1000 ;
b10110100000011000 /
b10110100000011000 \
b10110100000011000 `
b1100 0
b1100 >
b1100 Z
b1100 _
b1000 1
b1000 <
b1000 ?
b11 #
1!
1-
#30
0!
0-
#35
b11111111111111111111111011000000 *
b11111111111111111111111011000000 F
b11111111111111111111111011000000 V
b111 &
b111 M
b111 U
b10110000000011100 7
b10110000000011100 [
b10110000000011100 ^
b101100000000111 Q
b101100000000111 6
b101100000000111 S
b101100000000111 ]
b0 W
b101100000000111 P
b111 O
b1010 G
b11 3
b11 H
b11 X
b11111111111111111111011000000000 (
b11111111111111111111011000000000 T
b11111111111111111111011000000000 Y
b10000 2
b10000 :
b10000 a
b1010010110101100000000111 A
b1010010110101100000000111 .
b11111111111111111111011000000000 4
b11111111111111111111011000000000 J
b11111111111111111111011000000000 R
b1100 ;
b10110000000101100 /
b10110000000101100 \
b10110000000101100 `
b10000 0
b10000 >
b10000 Z
b10000 _
b1100 1
b1100 <
b1100 ?
b100 #
1!
1-
#40
0!
0-
#45
b10 *
b10 F
b10 V
b1 &
b1 M
b1 U
1'
b11111111111111111111111111111100 7
b11111111111111111111111111111100 [
b11111111111111111111111111111100 ^
b11111111111111111111111111111111 Q
b11111111111111111111111111111111 6
b11111111111111111111111111111111 S
b11111111111111111111111111111111 ]
b1 )
b1 K
b1 N
0+
b1010 8
b1010 D
b1010 E
b11111 W
b1111111111111111 P
b111111 O
b1000 L
b1010 I
b11111 C
b1010 B
b11111111111111111111111111111111 (
b11111111111111111111111111111111 T
b11111111111111111111111111111111 Y
b10100 2
b10100 :
b10100 a
b100001010010101111111111111111 A
b100001010010101111111111111111 .
b11 4
b11 J
b11 R
b10000 ;
b10000 /
b10000 \
b10000 `
b10100 0
b10100 >
b10100 Z
b10100 _
b10000 1
b10000 <
b10000 ?
b101 #
1!
1-
#50
0!
0-
#55
19
b1001 &
b1001 M
b1001 U
b0 (
b0 T
b0 Y
b11111111111111111111111111110100 7
b11111111111111111111111111110100 [
b11111111111111111111111111110100 ^
b100 )
b100 K
b100 N
0,
0'
b11111111111111111111111111111101 Q
b11111111111111111111111111111101 6
b11111111111111111111111111111101 S
b11111111111111111111111111111101 ]
b0 8
b0 D
b0 E
b0 *
b0 F
b0 V
b1111111111111101 P
b111101 O
b101 L
b0 I
b0 B
b1100 2
b1100 :
b1100 a
b10101010000001111111111111101 A
b10101010000001111111111111101 .
b10 3
b10 H
b10 X
b0 4
b0 J
b0 R
b10100 ;
b1100 /
b1100 \
b1100 `
b11000 0
b11000 >
b11000 Z
b11000 _
b10100 1
b10100 <
b10100 ?
b110 #
1!
1-
#60
0!
0-
#65
b11111111111111111111111110110000 *
b11111111111111111111111110110000 F
b11111111111111111111111110110000 V
09
b111 &
b111 M
b111 U
b10110000000011100 7
b10110000000011100 [
b10110000000011100 ^
1,
0'
b101100000000111 Q
b101100000000111 6
b101100000000111 S
b101100000000111 ]
b0 )
b0 K
b0 N
1+
b11111111111111111111111011000000 (
b11111111111111111111111011000000 T
b11111111111111111111111011000000 Y
b1011 8
b1011 D
b1011 E
b0 W
b101100000000111 P
b111 O
b0 L
b1011 I
b11111111111111111111111011000000 4
b11111111111111111111111011000000 J
b11111111111111111111111011000000 R
b1011 C
b1011 B
b10000 2
b10000 :
b10000 a
b1010010110101100000000111 A
b1010010110101100000000111 .
b1100 ;
b10110000000101100 /
b10110000000101100 \
b10110000000101100 `
b10000 0
b10000 >
b10000 Z
b10000 _
b1100 1
b1100 <
b1100 ?
b111 #
1!
1-
#70
0!
0-
#75
b1 *
b1 F
b1 V
b1 &
b1 M
b1 U
1'
b11111111111111111111111111111100 7
b11111111111111111111111111111100 [
b11111111111111111111111111111100 ^
b11111111111111111111111111111111 Q
b11111111111111111111111111111111 6
b11111111111111111111111111111111 S
b11111111111111111111111111111111 ]
b1 )
b1 K
b1 N
0+
b1010 8
b1010 D
b1010 E
b11111 W
b1111111111111111 P
b111111 O
b1000 L
b1010 I
b11111 C
b1010 B
b11111111111111111111111111111111 (
b11111111111111111111111111111111 T
b11111111111111111111111111111111 Y
b10100 2
b10100 :
b10100 a
b100001010010101111111111111111 A
b100001010010101111111111111111 .
b10 4
b10 J
b10 R
b10000 ;
b10000 /
b10000 \
b10000 `
b10100 0
b10100 >
b10100 Z
b10100 _
b10000 1
b10000 <
b10000 ?
b1000 #
1!
1-
#80
0!
0-
#85
19
b1001 &
b1001 M
b1001 U
b0 (
b0 T
b0 Y
b11111111111111111111111111110100 7
b11111111111111111111111111110100 [
b11111111111111111111111111110100 ^
b100 )
b100 K
b100 N
0,
0'
b11111111111111111111111111111101 Q
b11111111111111111111111111111101 6
b11111111111111111111111111111101 S
b11111111111111111111111111111101 ]
b0 8
b0 D
b0 E
b0 *
b0 F
b0 V
b1111111111111101 P
b111101 O
b101 L
b0 I
b0 B
b1100 2
b1100 :
b1100 a
b10101010000001111111111111101 A
b10101010000001111111111111101 .
b1 3
b1 H
b1 X
b0 4
b0 J
b0 R
b10100 ;
b1100 /
b1100 \
b1100 `
b11000 0
b11000 >
b11000 Z
b11000 _
b10100 1
b10100 <
b10100 ?
b1001 #
1!
1-
#90
0!
0-
#95
b11111111111111111111111111011000 *
b11111111111111111111111111011000 F
b11111111111111111111111111011000 V
09
b111 &
b111 M
b111 U
b10110000000011100 7
b10110000000011100 [
b10110000000011100 ^
1,
0'
b101100000000111 Q
b101100000000111 6
b101100000000111 S
b101100000000111 ]
b0 )
b0 K
b0 N
1+
b11111111111111111111111110110000 (
b11111111111111111111111110110000 T
b11111111111111111111111110110000 Y
b1011 8
b1011 D
b1011 E
b0 W
b101100000000111 P
b111 O
b0 L
b1011 I
b11111111111111111111111110110000 4
b11111111111111111111111110110000 J
b11111111111111111111111110110000 R
b1011 C
b1011 B
b10000 2
b10000 :
b10000 a
b1010010110101100000000111 A
b1010010110101100000000111 .
b1100 ;
b10110000000101100 /
b10110000000101100 \
b10110000000101100 `
b10000 0
b10000 >
b10000 Z
b10000 _
b1100 1
b1100 <
b1100 ?
b1010 #
1!
1-
#100
0!
0-
#105
b0 *
b0 F
b0 V
b1 &
b1 M
b1 U
1'
b11111111111111111111111111111100 7
b11111111111111111111111111111100 [
b11111111111111111111111111111100 ^
b11111111111111111111111111111111 Q
b11111111111111111111111111111111 6
b11111111111111111111111111111111 S
b11111111111111111111111111111111 ]
b1 )
b1 K
b1 N
0+
b1010 8
b1010 D
b1010 E
b11111 W
b1111111111111111 P
b111111 O
b1000 L
b1010 I
b11111 C
b1010 B
b11111111111111111111111111111111 (
b11111111111111111111111111111111 T
b11111111111111111111111111111111 Y
b10100 2
b10100 :
b10100 a
b100001010010101111111111111111 A
b100001010010101111111111111111 .
b1 4
b1 J
b1 R
b10000 ;
b10000 /
b10000 \
b10000 `
b10100 0
b10100 >
b10100 Z
b10100 _
b10000 1
b10000 <
b10000 ?
b1011 #
1!
1-
#110
0!
0-
#115
b1001 &
b1001 M
b1001 U
b0 (
b0 T
b0 Y
b11111111111111111111111111110100 7
b11111111111111111111111111110100 [
b11111111111111111111111111110100 ^
b100 )
b100 K
b100 N
0,
0'
b11111111111111111111111111111101 Q
b11111111111111111111111111111101 6
b11111111111111111111111111111101 S
b11111111111111111111111111111101 ]
b0 8
b0 D
b0 E
b0 *
b0 F
b0 V
b1111111111111101 P
b111101 O
b101 L
b0 I
b0 B
b11000 2
b11000 :
b11000 a
b10101010000001111111111111101 A
b10101010000001111111111111101 .
b0 3
b0 H
b0 X
b0 4
b0 J
b0 R
b10100 ;
b1100 /
b1100 \
b1100 `
b11000 0
b11000 >
b11000 Z
b11000 _
b10100 1
b10100 <
b10100 ?
b1100 #
1!
1-
#120
0!
0-
#125
b0 &
b0 M
b0 U
b0 7
b0 [
b0 ^
1,
0'
b0 Q
b0 6
b0 S
b0 ]
b0 )
b0 K
b0 N
1+
b0 W
b0 P
b0 O
b0 L
b0 G
b0 C
b11100 2
b11100 :
b11100 a
b0 A
b0 .
b11000 ;
b11100 /
b11100 \
b11100 `
b11100 0
b11100 >
b11100 Z
b11100 _
b11000 1
b11000 <
b11000 ?
b1101 #
1!
1-
#130
0!
0-
#135
b100000 2
b100000 :
b100000 a
b11100 ;
b100000 /
b100000 \
b100000 `
b100000 0
b100000 >
b100000 Z
b100000 _
b11100 1
b11100 <
b11100 ?
b1110 #
1!
1-
#140
0!
0-
#145
b100100 2
b100100 :
b100100 a
b100000 ;
b100100 /
b100100 \
b100100 `
b100100 0
b100100 >
b100100 Z
b100100 _
b100000 1
b100000 <
b100000 ?
b1111 #
1!
1-
#150
0!
0-
#155
b101000 2
b101000 :
b101000 a
b100100 ;
b101000 /
b101000 \
b101000 `
b101000 0
b101000 >
b101000 Z
b101000 _
b100100 1
b100100 <
b100100 ?
b10000 #
1!
1-
#160
0!
0-
#165
b101100 2
b101100 :
b101100 a
b101000 ;
b101100 /
b101100 \
b101100 `
b101100 0
b101100 >
b101100 Z
b101100 _
b101000 1
b101000 <
b101000 ?
b10001 #
1!
1-
#170
0!
0-
#175
b110000 2
b110000 :
b110000 a
b101100 ;
b110000 /
b110000 \
b110000 `
b110000 0
b110000 >
b110000 Z
b110000 _
b101100 1
b101100 <
b101100 ?
b10010 #
1!
1-
#180
0!
0-
#185
b110100 2
b110100 :
b110100 a
b110000 ;
b110100 /
b110100 \
b110100 `
b110100 0
b110100 >
b110100 Z
b110100 _
b110000 1
b110000 <
b110000 ?
b10011 #
1!
1-
#190
0!
0-
#195
b111000 2
b111000 :
b111000 a
b110100 ;
b111000 /
b111000 \
b111000 `
b111000 0
b111000 >
b111000 Z
b111000 _
b110100 1
b110100 <
b110100 ?
b10100 #
1!
1-
#200
0!
0-
#205
b111100 2
b111100 :
b111100 a
b111000 ;
b111100 /
b111100 \
b111100 `
b111100 0
b111100 >
b111100 Z
b111100 _
b111000 1
b111000 <
b111000 ?
b10101 #
1!
1-
#210
0!
0-
#215
b1000000 2
b1000000 :
b1000000 a
b111100 ;
b1000000 /
b1000000 \
b1000000 `
b1000000 0
b1000000 >
b1000000 Z
b1000000 _
b111100 1
b111100 <
b111100 ?
b10110 #
1!
1-
#220
0!
0-
#225
b1000100 2
b1000100 :
b1000100 a
b1000000 ;
b1000100 /
b1000100 \
b1000100 `
b1000100 0
b1000100 >
b1000100 Z
b1000100 _
b1000000 1
b1000000 <
b1000000 ?
b10111 #
1!
1-
#230
0!
0-
#235
b1001000 2
b1001000 :
b1001000 a
b1000100 ;
b1001000 /
b1001000 \
b1001000 `
b1001000 0
b1001000 >
b1001000 Z
b1001000 _
b1000100 1
b1000100 <
b1000100 ?
b11000 #
1!
1-
#240
0!
0-
#245
b1001100 2
b1001100 :
b1001100 a
b1001000 ;
b1001100 /
b1001100 \
b1001100 `
b1001100 0
b1001100 >
b1001100 Z
b1001100 _
b1001000 1
b1001000 <
b1001000 ?
b11001 #
1!
1-
#250
0!
0-
#255
b1010000 2
b1010000 :
b1010000 a
b1001100 ;
b1010000 /
b1010000 \
b1010000 `
b1010000 0
b1010000 >
b1010000 Z
b1010000 _
b1001100 1
b1001100 <
b1001100 ?
b11010 #
1!
1-
#260
0!
0-
